// Generated by CoffeeScript 1.6.2
(function() {
  var SocialGrid, parallel, promise, sequence, twitterCallback,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  promise = require('when');

  sequence = require("when/sequence");

  parallel = require("when/parallel");

  SocialGrid = (function() {
    var _this = this;

    function SocialGrid() {
      this.parseTweets = __bind(this.parseTweets, this);
      this.twitter = __bind(this.twitter, this);
      this.parsePictures = __bind(this.parsePictures, this);
      this.instagram = __bind(this.instagram, this);
      this.init = __bind(this.init, this);
    }

    SocialGrid.prototype.dimensions = {
      baseHeight: 0
    };

    SocialGrid.prototype.creds = {
      instagram: {
        clientId: "5b3bafe2ba6a4f82a09dbb65d889e2cb"
      }
    };

    SocialGrid.prototype.strings = {
      picture: function(url, imageHeight) {
        return "<img class='sg-instagram-picture' src='" + url + "' height='" + imageHeight + "'/>";
      },
      container: function(height) {
        return "<div id='sg-container', style='height:" + height + "px'></div>";
      },
      tweet: function(tweet, tweetWidth, tweetHeight) {
        return "<div class='sg-twitter-tweet' style='width:" + tweetWidth + "px;height:" + tweetHeight + "px;'><span class='sg-tweet-text'>" + tweet + "</span></div>";
      }
    };

    SocialGrid.prototype.init = function(height) {
      this.dimensions.baseHeight = height;
      $('#social-grid').append(this.strings.container(this.dimensions.baseHeight));
      this.twitter('wongagillian');
      return this.instagram('wonga');
    };

    SocialGrid.prototype.instagram = function(username) {
      var ajaxopts, instagramUrlString,
        _this = this;

      instagramUrlString = "https://api.instagram.com/v1/tags/" + username + "/media/recent?client_id=" + this.creds.instagram.clientId;
      ajaxopts = {
        url: instagramUrlString,
        type: 'GET',
        dataType: 'jsonp',
        success: function(data) {
          return _this.parsePictures(data);
        }
      };
      return $.ajax(ajaxopts, {
        error: function() {
          return console.log("failed");
        }
      });
    };

    SocialGrid.prototype.parsePictures = function(pictures) {
      var pic, _i, _len, _ref, _results;

      _ref = pictures.data;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        pic = _ref[_i];
        _results.push($('#sg-container').append(this.strings.picture(pic.images.low_resolution.url, this.dimensions.baseHeight / 4)));
      }
      return _results;
    };

    SocialGrid.prototype.twitter = function(username) {
      var ajaxopts, twitterDfd, twitterUrlString,
        _this = this;

      twitterDfd = promise.defer();
      twitterUrlString = "http://search.twitter.com/search.json?q=from%3a" + username;
      ajaxopts = {
        url: twitterUrlString,
        type: 'GET',
        dataType: 'jsonp',
        success: function(data) {
          return _this.parseTweets(data);
        }
      };
      return $.ajax(ajaxopts, {
        error: function() {
          return console.log('failed');
        }
      });
    };

    SocialGrid.prototype.parseTweets = function(tweets) {
      var tweet, _i, _len, _ref, _results;

      _ref = tweets.results;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        tweet = _ref[_i];
        _results.push($('#sg-container').append(this.strings.tweet(tweet.text, this.dimensions.baseHeight / 2, this.dimensions.baseHeight / 2)));
      }
      return _results;
    };

    return SocialGrid;

  }).call(this);

  window.SocialGrid = SocialGrid;

  twitterCallback = function() {
    return alert('yes!');
  };

}).call(this);
